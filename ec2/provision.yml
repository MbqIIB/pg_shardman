### Build & install from sources PG, pg_pathman and pg_shardman

---
- hosts: nodes

  environment:
    PATH: "{{ pg_dst }}/bin:{{ ansible_env.PATH }}"
    CFLAGS: "{{ cflags }}"

  tasks:
  - name: update apt cache (Debian)
    apt: update_cache=yes
    become: yes
    tags:
      - apt_cache

  - name: ensure dependencies (Debian)
    apt: name={{item}} state=installed
    with_items:
    - git
    - automake
    - libtool
    - build-essential
    - bison
    - flex
    - libreadline-dev
    - zlib1g-dev
    when: ansible_os_family == "Debian"
    become: yes
    tags:
      - build_pg

  - name: clone postgres sources
    git: repo={{pg_repo}}
      dest={{pg_src}}
      version={{pg_version_tag}}
      depth=1
      accept_hostkey=True
    tags:
      - build_pg

  - name: build and install pg
    shell: ./configure --prefix={{pg_dst}} --enable-debug && make clean && make -j {{makejobs}} && make install
    args:
      chdir: "{{pg_src}}"
    tags:
      - build_pg

  - name: clone pathman
    git: repo={{pathman_repo}}
      dest={{pathman_src}}
      version={{pathman_version_tag}}
      depth=1
      accept_hostkey=True
    tags:
      - build_pathman

  - name: build and install pathman
    shell: USE_PGXS=1 make clean && USE_PGXS=1 make -j {{makejobs}} install
    args:
      chdir: "{{pathman_src}}"
    tags:
      - build_pathman

  - name: clone shardman
    git: repo={{shardman_repo}}
      dest={{shardman_src}}
      version={{shardman_version_tag}}
      depth=1
      accept_hostkey=True
    tags:
      - build_shardman

  - name: build and install shardman
    shell: make clean && make -j {{makejobs}} && make install
    # shell: echo ${USE_PGXS}
    args:
      chdir: "{{shardman_src}}"
    tags:
      - build_shardman
