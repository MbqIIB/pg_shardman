### send configs and restart nodes
# Templates in the root of the project are copied automatically. You can append
# something to them by creating same-titled in this (devops/) directory, they
# are not tracked by git.
# BTW, you can refer to ansible vars there.
# The only guc we manage dynamically by default is shardlord_connstring, it
# requires inventory knowledge

---
- hosts: shardlord
  tasks:
  # jinja2 won't work with outside files, so first copy them to templates/ dir,
  # oh my... see https://github.com/ansible/ansible/issues/7106
  # I used to create a bunch of (possibly dangled) symlinks, but pgfarm doesn't
  # like that.
  - name: cp configs into template dir
    local_action: >
      shell cp ../postgresql.conf.common templates/postgresql.conf.common 2>/dev/null || : ;
      cp ../postgresql.conf.lord templates/postgresql.conf.lord 2>/dev/null || : ;
      cp ../postgresql.conf.worker templates/postgresql.conf.worker 2>/dev/null || : ;

      cp postgresql.conf.common templates/postgresql.conf.devops.common 2>/dev/null || : ;
      cp postgresql.conf.lord templates/postgresql.conf.devops.lord 2>/dev/null || : ;
      cp postgresql.conf.worker templates/postgresql.conf.devops.worker 2>/dev/null || : ;
    run_once: true

  - name: copy postgresql.conf to shardlord
    template:
      src=templates/postgresql.conf.lord.j2
      dest="{{ pg_conffile }}"

- hosts: workers
  tasks:
  - name: copy postgresql.conf to workers
    template:
      src=templates/postgresql.conf.worker.j2
      dest="{{ pg_conffile }}"

- import_playbook: pg_ctl.yml pg_ctl_action=restart

- hosts: workers
  tasks:
  - name: copy pgbouncer.conf to workers, pgbouncer_pool_mode is {{ pgbouncer_pool_mode }}, pgbouncer_pool_size is {{ pgbouncer_pool_size }}
    template:
      src=templates/pgbouncer.conf.j2
      dest="{{ pgbouncer_conf }}"
    tags:
      - pgbouncer
    when: use_pgbouncer | bool

  - name: kill bouncer
    shell: 'pkill -SIGINT pgbouncer || true'
    tags:
      - pgbouncer
    when: use_pgbouncer | bool

  - name: start pgbouncer
    command: pgbouncer --daemon "{{ pgbouncer_conf }}"
    tags:
     - pgbouncer
    when: use_pgbouncer | bool